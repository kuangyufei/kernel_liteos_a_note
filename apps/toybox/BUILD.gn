# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/component/lite_component.gni")
import("//kernel/liteos_a/liteos.gni")
import("//third_party/toybox/toybox.gni")

group("toybox") {
  deps = [ ":build_toybox" ]
}

copy("copy_toybox_src") {
  sources = TOYBOX_SRC_DIR
  outputs = [ "$target_out_dir/toybox_build" ]
}

copy("copy_toybox_config") {
  deps = [ ":copy_toybox_src" ]
  sources = [ "liteos_a_custom.config" ]
  outputs = [ "$target_out_dir/{{source_file_part}}" ]
}

build_ext_component("build_toybox") {
  deps = [
    ":copy_toybox_config",
    ":copy_toybox_src",
  ]
  deps += [ "//prebuilts/lite/sysroot" ]
  exec_path = rebase_path("$target_out_dir/toybox_build")

  cflags = [
    "-fstack-protector-strong",
    "-D_FORTIFY_SOURCE=2",
  ]
  cflags = string_join(" ", cflags)

  extra_flags = string_join(" ", target_arch_cflags)
  if (ohos_build_compiler == "clang") {
    extra_flags += " --target=$target_triple"
    extra_flags += " --sysroot=" + rebase_path(ohos_current_sysroot)
  }

  command = "rm -rf .git && cp -rfp porting/liteos_a/. . && env"
  command += " CC=\"$ohos_current_cc_command\""
  command += " STRIP=\"$ohos_current_strip_command\""
  command += " OUTNAME=toybox"
  command += " CFLAGS=\"$cflags $extra_flags\""
  command += " make toybox"
  command += " && install -D toybox "
  command += rebase_path("$root_out_dir/bin/toybox", exec_path)
  command += " && install -D generated/unstripped/toybox "
  command += rebase_path("$root_out_dir/unstripped/bin/toybox", exec_path)

  outputs = [
    "$root_out_dir/unstripped/bin/toybox",
    "$root_out_dir/bin/toybox",
  ]
}
