# Copyright (c) 2022-2022 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/test.gni")
import("//kernel/liteos_a/testsuites/unittest/config.gni")
import("./config.gni")

config("libc_config") {
  if (LOSCFG_USER_TEST_POSIX_MQUEUE == true ||
      LOSCFG_USER_TEST_POSIX_PTHREAD == true) {
    cflags = [ "-O1" ]
    cflags_cc = cflags
  }
}

if (LOSCFG_USER_TEST_LEVEL >= TEST_LEVEL_LOW) {
  unittest("liteos_a_libc_unittest_door") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/kernel"
    include_dirs = common_include_dirs
    sources = sources_entry
    sources += sources_smoke
    sources_full = []
    sources += sources_full
    configs = [ "..:public_config_for_door" ]
    configs += [ ":libc_config" ]
    deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
  }
}

if (LOSCFG_USER_TEST_LEVEL >= TEST_LEVEL_MIDDLE) {
  unittest("liteos_a_libc_unittest") {
    output_extension = "bin"
    output_dir = "$root_out_dir/test/unittest/kernel"
    include_dirs = common_include_dirs
    sources = sources_entry
    sources += sources_smoke
    sources += sources_full
    configs = [ "..:public_config_for_all" ]
    configs += [ ":libc_config" ]
    deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
  }
}
