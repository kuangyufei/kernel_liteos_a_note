# Copyright (c) 2022-2022 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/test.gni")
import("//kernel/liteos_a/testsuites/unittest/config.gni")

common_include_dirs = [
  "//third_party/googletest/googletest/include",
  "../common/include",
]

sources_entry = [ "../common/osTest.cpp" ]

sources_smoke = []

sources_full = []

# netdb module
if (LOSCFG_USER_TEST_NET_NETDB == true) {
  import("./netdb/config.gni")
  common_include_dirs += netdb_include_dirs
  sources_entry += netdb_sources_entry
  sources_smoke += netdb_sources_smoke
  sources_full += netdb_sources_full
}

# resolv module
if (LOSCFG_USER_TEST_NET_RESOLV == true) {
  import("./resolv/config.gni")
  common_include_dirs += resolv_include_dirs
  sources_entry += resolv_sources_entry
  sources_smoke += resolv_sources_smoke
  sources_full += resolv_sources_full
}

# socket module
if (LOSCFG_USER_TEST_NET_SOCKET == true) {
  import("./socket/config.gni")
  common_include_dirs += socket_include_dirs
  sources_entry += socket_sources_entry
  sources_smoke += socket_sources_smoke
  sources_full += socket_sources_full
}
