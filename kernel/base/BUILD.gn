# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2023 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//kernel/liteos_a/liteos.gni")

module_name = get_path_info(rebase_path("."), "name")
kernel_module(module_name) {
  sources = [
    "container/los_container.c",
    "container/los_ipc_container.c",
    "container/los_mnt_container.c",
    "container/los_pid_container.c",
    "container/los_time_container.c",
    "container/los_uts_container.c",
    "core/los_bitmap.c",
    "core/los_info.c",
    "core/los_process.c",
    "core/los_smp.c",
    "core/los_swtmr.c",
    "core/los_sys.c",
    "core/los_task.c",
    "core/los_tick.c",
    "ipc/los_event.c",
    "ipc/los_futex.c",
    "ipc/los_ipcdebug.c",
    "ipc/los_mux.c",
    "ipc/los_queue.c",
    "ipc/los_queue_debug.c",
    "ipc/los_rwlock.c",
    "ipc/los_sem.c",
    "ipc/los_sem_debug.c",
    "ipc/los_signal.c",
    "mem/common/los_memstat.c",
    "mem/membox/los_membox.c",
    "mem/tlsf/los_memory.c",
    "misc/kill_shellcmd.c",
    "misc/los_misc.c",
    "misc/los_stackinfo.c",
    "misc/mempt_shellcmd.c",
    "misc/panic_shellcmd.c",
    "misc/swtmr_shellcmd.c",
    "misc/sysinfo_shellcmd.c",
    "misc/task_shellcmd.c",
    "misc/vm_shellcmd.c",
    "mp/los_lockdep.c",
    "mp/los_mp.c",
    "mp/los_percpu.c",
    "mp/los_spinlock.c",
    "om/los_err.c",
    "sched/los_idle.c",
    "sched/los_priority.c",
    "sched/los_sched.c",
    "sched/los_sortlink.c",
    "sched/los_statistics.c",
    "vm/los_vm_boot.c",
    "vm/los_vm_dump.c",
    "vm/los_vm_fault.c",
    "vm/los_vm_filemap.c",
    "vm/los_vm_iomap.c",
    "vm/los_vm_map.c",
    "vm/los_vm_page.c",
    "vm/los_vm_phys.c",
    "vm/los_vm_scan.c",
    "vm/los_vm_syscall.c",
    "vm/oom.c",
    "vm/shm.c",
  ]

  if (defined(LOSCFG_SHELL_CMD_DEBUG)) {
    configs += [ "$HDFTOPDIR:hdf_config" ]
  }

  public_configs = [ ":public" ]
  configs += [ ":private" ]
}

config("public") {
  include_dirs = [ "include" ]
}

config("private") {
  cflags = [ "-Wno-frame-address" ]
}
